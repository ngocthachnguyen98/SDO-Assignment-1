version: 2.1

commands:
  install_deps:
    steps:
      - run:
          name: Install dependencies
          command: |
            cd src
            npm install

jobs:
  # CI build and run unit tests
  # Might need to add npm start
  build:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - install_deps
      - run:
          name: Run unit tests
          command: |
            cd src
            mkdir -p test-output
            npm run test-unit
      - store_test_results:
          path: ./src/test-output
      - store_artifacts:
          path: ./src/test-output

  # Integration testing
  # Change port APP_PORT to 3000
  # integration-tests:
  #   docker:
  #     - image: circleci/node:lts
  #     - image: mongo:4.0
  #   environment:
  #     APP_PORT: 3000
  #     JEST_JUNIT_OUTPUT_DIR: test-output
  #   steps:
  #     - checkout
  #     - install_deps
  #     - run:
  #         name: Run integration tests
  #         command: |
  #           mkdir -p test-output
  #           npm run test-integration
  #     - store_test_results:
  #         path: test-output

  # ESLint / Static Code Analysis
  # linting:
  #   docker:
  #     - image: circleci/node:lts
  #   steps:
  #     - checkout
  #     - install_deps
  #     - run:
  #         command: eslint ./src --format junit --output-file ./src/test-output/eslint.xml
  #         when: always
  #     - run:
  #         name: Run linting
  #         command: npm run test-lint
  #     - store_test_results:
  #         path: ./src/test-output
  #     - store_artifacts:
  #         path: ./src/test-output

  # Packing
  # Storing packages took too long! >15mins
  pack:
    docker:
      - image: circleci/node:lts
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - install_deps
      - run: 
          - name: Creating directory
          - command: |
              cd src
              mkdir -p dist
      - store_artifacts:
          path: ./src/dist

workflows:
  version: 2
  build-test-package:
    jobs:
      - build
      # - linting:
      #     requires:
      #       - build
      - pack:
          requires:
            - build
