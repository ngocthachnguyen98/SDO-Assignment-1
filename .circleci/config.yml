version: 2.1

commands:
  install_deps:
    steps:
      - run:
          name: Install dependencies
          command: |
            cd src
            npm install

jobs:
  # CI build and run unit tests
  # Might need to add npm start
  # build:
  #   docker:
  #     - image: circleci/node:lts
  #   environment:
  #     MOCHA_FILE: ./src/test-output/unit_test_results.xml
  #   steps:
  #     - checkout
  #     - install_deps
  #     - run:
  #         name: Run unit tests
  #         command: |
  #           cd src
  #           mkdir -p test-output
  #           npm run test-unit
  #     - store_test_results:
  #         path: ./src/test-output
  #     - store_artifacts:
  #         path: ./src/test-output
  build:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - install_deps
      - run:
          name: Create directory
          command: |
            cd src
            mkdir -p test-output
      - run:
          name: Run unit tests
          command: mocha test --reporter mocha-junit-reporter
          environment:
            MOCHA_FILE: ./src/test-output/unit_test_results.xml
          when: always
      - store_test_results:
          path: ./src/test-output
      - store_artifacts:
          path: ./src/test-output
  
  # Unit testing
  # Mocha-based
  # unit-tests:
  #   docker:
  #     - image: circleci/node:lts
  #   environment:
  #     JEST_JUNIT_OUTPUT_DIR: test-output
  #   steps:
  #     - checkout
  #     - install_deps
  #     - run:
  #         name: Run tests
  #         command: |
  #           mkdir -p test-output
  #           npm run unit-tests
  #     - store_test_results:
  #         path: test-output

  # Integration testing
  # Change port APP_PORT to 3000
  # integration-tests:
  #   docker:
  #     - image: circleci/node:lts
  #     - image: mongo:4.0
  #   environment:
  #     APP_PORT: 3000
  #     JEST_JUNIT_OUTPUT_DIR: test-output
  #   steps:
  #     - checkout
  #     - install_deps
  #     - run:
  #         name: Run integration tests
  #         command: |
  #           mkdir -p test-output
  #           npm run test-integration
  #     - store_test_results:
  #         path: test-output

  # Static Code Analysis / Lint
  # sast:
  #   docker:
  #     - image: circleci/node:lts
  #   steps:
  #     - checkout
  #     - run:
  #         name: Install NodeJsScan
  #         command: |
  #           sudo apt update
  #           sudo apt install python3-pip
  #           pip3 install nodejsscan
  #     - run:
  #         name: Run NodeJsScan
  #         command: |
  #           nodejsscan -d ./ -o sast-output.json
  #     - store_artifacts:
  #         path: sast-output.json
  #     - run:
  #         name: Parse sast report
  #         command: |
  #           # exit with a non-zero exit code if there are any security issues
  #           exit $(cat sast-output.json | jq .total_count.sec)

  # Packing
  pack:
    docker:
      - image: circleci/node:lts
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - install_deps
      - store_artifacts:
          path: ./src/dist

workflows:
  version: 2
  build-test-package:
    jobs:
      - build
      # - integration-tests:
      #     requires:
      #       - build
      # - sast:
      #     requires:
      #       - build
      # - pack:
      #     requires:
      #       - integration-tests
      - pack:
          requires:
            - build
